#!/bin/bash

set -ex

# Show usage
function usage {
    echo "Usage: $0 [OPTIONS] sqldump configdump"
    echo "Options:"
    echo "  -l, --local     Specify that the sql and tar files are local files (default)"
    echo "  -r, --remote    Specify that the sql and tar files are remote files on S3"
    echo "  -h, --help      Show help"
    exit 1
}

# Parse command line arguments
local_files=true
while [[ "$#" -gt 0 ]]; do
    case $1 in
        -l|--local) local_files=true; shift;;
        -r|--remote) local_files=false; shift;;
        -h|--help) usage;;
        *) sqldump="$1"; configdump="$2"; shift; shift;;
    esac
done

# Check if sqldump and configdump are provided
if [ -z "$sqldump" ] || [ -z "$configdump" ]; then
    usage
fi

# Check if sqldump and configdump files exist
if [ $local_files == true ]; then
    if [ ! -f "$sqldump" ] || [ ! -f "$configdump" ]; then
        echo "Error: sqldump or configdump file not found"
        exit 1
    fi
else
    if ! command -v aws &> /dev/null; then
        echo "Error: awscli is not installed"
        exit 1
    fi
    if [ ! -f "$HOME/.aws/credentials" ]; then
        echo "Error: aws credentials not found"
        exit 1
    fi
    if [ ! "$(aws s3 ls $sqldump)" ] || [ ! "$(aws s3 ls $configdump)" ]; then
        echo "Error: sqldump or configdump file not found in S3 bucket"
        exit 1
    fi
fi

# include helper functions
if [ -f "/usr/share/koha/bin/koha-functions.sh" ]; then
    . "/usr/share/koha/bin/koha-functions.sh"
else
    echo "Error: /usr/share/koha/bin/koha-functions.sh not present." 1>&2
    exit 1
fi

# Verify that no files in the config dump exist on the filesystem.
anyexists=no
tar -tf "$configdump" |
while read x
do
    if [ -e "/$x" ]
    then
        anyexists=yes
        echo "ERROR: File exists: /$x" 1>&2
    fi
done
if [ "$anyexists" = yes ]
then
    die "Config dump $configdump has files that exist on the filesystem."
fi


# Create user and group.
name=$(tar tf "$configdump" | 
       sed -n '/^etc\/koha\/sites\/\([^/]*\)\/$/s//\1/p')
username="$name-koha"
adduser --no-create-home --disabled-login --gecos "Koha instance $username" \
    --home "/var/lib/koha/$name" --quiet "$username"


# Create dirs. Some of them will be in the tarball, but not all, e.g.,
# /var/run and /var/lock.
koha-create-dirs "$name"


# Unpack tarball.
if [ $local_files] 
then
tar -C / -xf "$configdump"
else
aws s3 cp "$configdump" - | tar -C / -xzvf -
fi

# Re-create database and database user.
mysqldb="koha_$name"
mysqluser="koha_$name"
mysqlpwd="$( xmlstarlet sel -t -v 'yazgfs/config/pass' /etc/koha/sites/$name/koha-conf.xml )"
if [ $local_files == true ]; then
zcat "$sqldump" | mysql --defaults-extra-file=/etc/mysql/koha-common.cnf
else
aws s3 cp "$sqldump" - | zcat | mysql --defaults-extra-file=/etc/mysql/koha-common.cnf
fi

mysql --defaults-extra-file=/etc/mysql/koha-common.cnf << eof || true
DROP USER IF EXISTS '$mysqluser';
CREATE USER '$mysqluser' IDENTIFIED BY '$mysqlpwd';
GRANT ALL PRIVILEGES ON $mysqldb.* TO '$mysqluser';
FLUSH PRIVILEGES;
eof
koha-rebuild-zebra --full "$name"

# Restart Apache.
/etc/init.d/apache2 restart