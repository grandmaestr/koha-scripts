#!/bin/bash
# ------------------------------------------------------------------
# Author: Lennon Mazonde
# GitHub: @grandmaestr
# Title: koha-capache
# Description: 
# 	This script configures the OPAC and Staff URL in the 
# 	Apache conf (/etc/apache2/sites-enabled/) file for your Koha instance
# 	You will need to configure Apache config files (/etc/apache2/sites-enabled/)
# 	You can copy and paste this script onto your server and make it executable by running "chmod a+x /path/to/file_name"
# 	To run the script, simply go to "/path/to/file_name" or if it's in your home directory, run "~/file_name" in the CLI.
# 	This script is interactive, so you'll be prompted for input at various stages.
# 	You can modify or use this script however you like but I'd really appreciate it if you give me a shout out or attribution if you post it elsewhere :)

# ------------------------------------------------------------------

# Script version
VERSION=0.1.0
# Set the name of the script to variable
SCRIPT_NAME="$(basename ${0})"

# ------Help--------------------------------------------------------
Help(){
    # Display Help
    cat <<EOF
        Usage: $SCRIPT_NAME -ihv args

        Options:
        i - instanceid. The name of the koha instance. One instance id per option.
        h - help. Print this help.
        v - version. Print the script version.

        Example:
        To define a new staff or OPAC url for a single instance called "library", run:
            $SCRIPT_NAME -i library
        For multiple instances, run
                $SCRIPT_NAME -i library1 -i library2 ...
EOF
}
# --- Options processing -------------------------------------------
if [ $# == 0 ] ; then
    Help
    exit 1;
fi

while getopts ":i:vh" optname; do
    case "$optname" in
      v)
        echo "Version $VERSION"
        exit 0;
        ;;
      i)  
        instanceid+=("$OPTARG")
        ;;
      h)
        Help
        exit 0;
        ;;
      \?)
        echo "Unknown option $OPTARG"
        Help
        exit 0;
        ;;
      :)
        echo "Error: you must provide at least one instance name for option -$OPTARG"
        exit 0;
        ;;
      *)
        echo "Unknown error while processing options"
        Help
        exit 0;
        ;;
    esac
  done

shift $(($OPTIND - 1))

param1=$1
param2=$2

# --- Locks -------------------------------------------------------
LOCK_FILE=/tmp/$SUBJECT.lock
if [ -f "$LOCK_FILE" ]; then
   echo "Script is already running"
   exit
fi

trap "rm -f $LOCK_FILE" EXIT
touch $LOCK_FILE

# --- Body --------------------------------------------------------

for val in "${instanceid[@]}"; do
	opac=""
	staff=""

	while
		read -p "Update /etc/apache2/sites-enabled/$val.conf? (y/n): " response && [[ $response =~ ^([yY][eE][sS]|[yY])$ ]] 
	do
		# Prompt user to enter their Staff URL
		read -p "New Staff/admin page url $val (Leave out http:// or https://) : " staffdomain
		
		# Prompt user to enter their OPAC domain/subdomain
		read -p "New OPAC url for $val (Leave out http:// or https://) : " opacdomain
		
		# Strip out leading http(s):// and set to variable
		staffurl=$(echo "$staffdomain" | sed "s|.*://||; s|/.*||" )
		staff+=" ${staffurl}"

		# Strip out leading http(s):// and set to variable
		opacurl=$(echo "$opacdomain" | sed "s|.*://||; s|/.*||" )
		opac+=" ${opacurl}"

		# Replace ServerName with  Staff url 
		sudo sed  -i "/ServerName*/c\   ServerName $staffurl" /etc/apache2/sites-enabled/$val.conf

		# Replace *ServerName with  OPAC url 
		sudo sed -i  "0,/ServerName $staffurl/s//ServerName $opacurl/" /etc/apache2/sites-enabled/$val.conf

		# Print new conf file
		printf '-----------------------Begin Config--------------------------------- \n'
		sudo cat /etc/apache2/sites-enabled/$val.conf
		printf '-----------------------End Config----------------------------------- \n'

	done

done
# Restart Apache
sudo systemctl restart apache2
