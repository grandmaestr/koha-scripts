#!/bin/bash
# ------------------------------------------------------------------
# Author: Lennon Mazonde
# GitHub: @grandmaestr
# Title: koha-erm_eholdings_packages_agreements_uniq_error_fix
# Description: 
# ------------------------------------------------------------------
set -euo pipefail

# Script version
VERSION=0.1.0
SCRIPT_NAME="$(basename ${0})"
SUBJECT=koha-erm_eholdings_packages_agreements_uniq_error_fix

# Help function
help(){
    cat <<EOF
Usage: $SCRIPT_NAME -ihv args

Options:
i - instanceid. The name of the koha instance. One instance id per option.
h - help. Print this help.
v - version. Print the script version.

Example:
To run the script on a single instance called "library", run:
    $SCRIPT_NAME -i library
For multiple instances, run
        $SCRIPT_NAME -i library1 -i library2 ...
EOF
}

# Options processing
if [ $# == 0 ] ; then
    help
    exit 1;
fi

while getopts ":i:vh" optname; do
    case "$optname" in
      v)
        echo "Version $VERSION"
        exit 0;
        ;;
      i)  
        instanceid+=("$OPTARG")
        ;;
      h)
        help
        exit 0;
        ;;
      \?)
        echo "Unknown option $OPTARG"
        help
        exit 0;
        ;;
      :)
        echo "Error: you must provide at least one instance name for option -$OPTARG"
        exit 0;
        ;;
      *)
        echo "Unknown error while processing options"
        help
        exit 0;
        ;;
    esac
done

shift $(($OPTIND - 1))

# param1=$1
# param2=$2

# Backup function
backup(){
    sudo koha-run-backups
}

# Restore function
restore(){
    for val in "${instanceid[@]}"; do
        # Stop and remove Koha instance
        sudo koha-worker --stop $val
        sudo koha-plack --stop $val
        sudo koha-zebra --stop $val
        sudo koha-remove $val
        sudo deluser ${val}-koha
        sudo rm /etc/apache2/sites-enabled/$val.conf /etc/apache2/sites-enabled/$val-le-ssl.conf 
        sudo rm -rf /etc/koha/sites/$val
        sudo rm -rf /var/lib/koha/$val
        sudo systemctl restart apache2.service $val

        # Set path to backup files
        sqldump=$(sudo ls /var/spool/koha/$val/*.sql.gz -t | head -n1)
        configdump=$(sudo ls /var/spool/koha/$val/*.tar.gz -t | head -n1)
        sudo koha-restore $sqldump $configdump
        sudo koha-worker --start $val
        sudo koha-plack --enable $val
        sudo koha-plack --start $val
        sudo koha-zebra --start $val
    done
}

# Locks
LOCK_FILE=/tmp/$SUBJECT.lock
if [ -f "$LOCK_FILE" ]; then
   echo "Script is already running"
   exit
fi

trap "rm -f $LOCK_FILE" EXIT
touch $LOCK_FILE

# Main script
time=$(date +"%d_%m_%Y_%T")
for val in "${instanceid[@]}"; do 
    while true; do
        read -p "Drop and recreate the erm_eholdings_packages_agreements table for $val?:  " response 
    case $response in
        [yY][eE][sS]|[yY] )
            # Backup database
            while true; do
                read -p "Backup all your Koha instances? This step is strongly recommended." response 
                case $response in
                    [yY][eE][sS]|[yY] )
                        printf "Running backup. Please be patient. \n"
                        backup 2>/dev/null
                        printf "Backup complete \n"
                        break;;
                    [nN][oO]|[nN] ) 
                        printf "Skipping backup. \n"
                        break;;
                    [qQ][uU][iI][tT] | [qQ] )
                        exit;;
                    * ) echo Invalid response.Try again;;
                esac
            done

            # Drop and recreate the table
            sudo koha-mysql $val -Nse "DROP TABLE IF EXISTS erm_eholdings_packages_agreements;"
            sudo koha-mysql $val -Nse "CREATE TABLE erm_eholdings_packages_agreements (package_id int(11) NOT NULL COMMENT 'link to the package', agreement_id int(11) NOT NULL COMMENT 'link to the agreement', PRIMARY KEY (package_id,agreement_id), KEY erm_eholdings_packages_agreements_ibfk_2 (agreement_id), CONSTRAINT erm_eholdings_packages_agreements_ibfk_1 FOREIGN KEY (package_id) REFERENCES erm_eholdings_packages (package_id) ON DELETE CASCADE ON UPDATE CASCADE, CONSTRAINT erm_eholdings_packages_agreements_ibfk_2 FOREIGN KEY (agreement_id) REFERENCES erm_agreements (agreement_id) ON DELETE CASCADE ON UPDATE CASCADE ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;"

            printf "The drop and recreate operation for the erm_eholdings_packages_agreements table for $val is complete. \n"
            sleep 1s
            break;;

        [nN][oO]|[nN] )
            echo "No changes have been made."
            break;;

        [qQ][uU][iI][tT] | [qQ] )
            exit;;

        * )
            echo "Invalid response. Try again."
            ;;
    esac
done
done
