#!/bin/bash
# ------------------------------------------------------------------
# Author: Lennon Mazonde
# GitHub: @grandmaestr
# Title: koha-install
# Description: 
# 	This script installs a Koha instance(s) with a local or remote database.
# 	You can copy and paste this script onto your server and make it executable by running "chmod a+x /path/to/file_name"
# 	To run the script, simply go to "/path/to/file_name" or if it's in your home directory, run "~/file_name" in the CLI.
# 	This script is interactive, so you'll be prompted for input at various stages.
# 	You can modify or use this script however you like but I'd really appreciate it if you give me a shout out or attribution if you post it elsewhere :)

# ------------------------------------------------------------------

# Script version
VERSION=0.1.0
# Set the name of the script to variable
SCRIPT_NAME="$(basename ${0})"

# ------Help--------------------------------------------------------
Help(){
    # Display Help
    cat <<EOF
        Usage: $SCRIPT_NAME -ihv args

        Options:
        i - instanceid. The name of the koha instance. One instance id per option.
        h - help. Print this help.
        v - version. Print the script version.

        Example:
        To define a new staff or OPAC url for a single instance called "library", run:
            $SCRIPT_NAME -i library
        For multiple instances, run
                $SCRIPT_NAME -i library1 -i library2 ...
EOF
}
# --- Options processing -------------------------------------------
if [ $# == 0 ] ; then
    Help
    exit 1;
fi

while getopts ":i:vh" optname; do
    case "$optname" in
      v)
        echo "Version $VERSION"
        exit 0;
        ;;
      i)  
        instanceid+=("$OPTARG")
        ;;
      h)
        Help
        exit 0;
        ;;
      \?)
        echo "Unknown option $OPTARG"
        Help
        exit 0;
        ;;
      :)
        echo "Error: you must provide at least one instance name for option -$OPTARG"
        exit 0;
        ;;
      *)
        echo "Unknown error while processing options"
        Help
        exit 0;
        ;;
    esac
  done

shift $(($OPTIND - 1))

param1=$1
param2=$2

# --- Stop instance------------------------------------------------
Stop(){
	# The following commands stop the Koha instance soon after they are created. I found this necessary when creating multiple instances in order to reduce CPU usage.
	# Enable instance
	sudo koha-worker --stop $val
	# Start Zebra
	sudo koha-zebra --stop $val
	# Enable Plack
	sudo koha-plack --stop $val
}
# --- Start instance------------------------------------------------
Start(){
	# Enable instance
	sudo koha-enable $val
	# Enable koha-worker
	sudo koha-worker --start $val
	# Start Zebra
	sudo koha-zebra --start $val
	# Enable Plack
	sudo koha-plack --enable $val
	sudo koha-plack --start $val
}
# --- Install remote db --------------------------------------------
InstallRemoteDB(){
	#create Koha database and user on remote server. Works on MariaDB. May need to be modified for a MySQL server.
	mysql -h ${hostname} -u ${remotedbroot} -p${remotedbpwd} -e "
	CREATE USER 'koha_${val}'@'${clientipaddr}' IDENTIFIED BY '${remotekohadbpwd}';
	GRANT ALL PRIVILEGES ON koha_${val}.* to 'koha_${val}'@'${clientipaddr}'; 
	FLUSH PRIVILEGES;"
}
# --- Install remote db aurora--------------------------------------
InstallRemoteDBAurora(){
	mysql -h ${hostname} -u ${remotedbroot} -p${remotedbpwd} -e "
	CREATE USER 'koha_${val}'@'${clientipaddr}' IDENTIFIED BY '${remotekohadbpwd}';
	GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER, CREATE TEMPORARY TABLES,
	CREATE VIEW, EVENT, TRIGGER, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EXECUTE ON koha_${val}.* to 'koha_${val}'@'${clientipaddr}'; FLUSH PRIVILEGES;"
}	

# --- Locks -------------------------------------------------------
LOCK_FILE=/tmp/$SUBJECT.lock
if [ -f "$LOCK_FILE" ]; then
   echo "Script is already running"
   exit
fi

trap "rm -f $LOCK_FILE" EXIT
touch $LOCK_FILE

# --- Body --------------------------------------------------------


# Store array in variables
hn=""

for val in "${instanceid[@]}"; do
	hn+=" ${hostname}"
	configpath=/etc/apache2/sites-enabled/$val.conf


	# koha-plack requires the following Apache modules
	sudo a2enmod headers proxy_http
	sudo a2enmod cgi
	sudo a2enmod deflate

	# Prompt user to enter their Staff URL
	read -p "New Staff/admin page url $val (Leave out http:// or https://) : " staffdomain

	# Prompt user to enter their OPAC domain/subdomain
	read -p "New OPAC url for $val (Leave out http:// or https://) : " opacdomain
	
	# Strip out leading http(s):// and set to variable
	staffurl=$(echo "$staffdomain" | sed "s|.*://||; s|/.*||" )
	staff+=" ${staffurl}"

	# Strip out leading http(s):// and set to variable
	opacurl=$(echo "$opacdomain" | sed "s|.*://||; s|/.*||" )
	opac+=" ${opacurl}"

	# Prompt user for local or remote db install
	while true; do
		read -p "Configure Koha instance to use local or remote database? l(ocal)/r(emote): " response 

		case $response in
    		[lL][oO][cC][aA][lL]|[lL] )
				# Create the instance
				printf "Installing Koha with a local database...\n"
				sleep 1s
				sudo koha-create --create-db $val
				break;;

			[rR][eE][mM][oO][tT][eE] | [rR] )
				# Create the instance
				read -p "Enter remote database hostname: " hostname
				read -p "Enter remote database root user: " remotedbroot
				echo "Enter remote database root password: " 
				read remotedbpwd
				echo "Enter the IP address of your client server (i.e. the server runnning the Koha web application). If using AWS, enter the **Private** IP of your EC2 instance: "
				read clientipaddr
				# Get and set password for the remote koha database
				remotekohadbpwd=$(sudo xmlstarlet sel -t -v 'yazgfs/config/pass' /etc/koha/sites/$val/koha-conf.xml)

				printf "Installing Koha with a remote database...\n"
				sleep 1s
				sudo koha-create --request-db $val

				# Install a remote db	
				InstallRemoteDB
				
				# If using Amazon Aurora MySQL, comment the MySQL script above and uncomment the following line.
				# InstallRemoteDBAurora

				#Create koha-common.cnf
				echo "
				[client]
				host     = ${hostname}
				user     = ${remotedbroot}
				password = ${remotedbpwd}
				socket   = /var/run/mysqld/mysqld.sock
				[mysql_upgrade]
				host     = ${hostname}
				user     = ${remotedbroot}
				password = ${remotedbpwd}
				socket   = /var/run/mysqld/mysqld.sock
				" | sudo tee /etc/mysql/koha-common.cnf >/dev/null 
				break;;

			* ) echo Invalid response.Try again;;
		esac
	done	

	# Enable your Koha instance config
	sudo a2ensite $val

	# Replace ServerName with  Staff url 
	if [[ -z ${string} ]]; 
	then
		echo "ServerName not specified, not setting"
	else
	sudo sed  -i "/ServerName*/c\   ServerName $staffurl" $configpath
	fi 

	# Replace *ServerName with  OPAC url 
	if [[ -z ${string} ]]; 
	then
		echo "ServerName not specified, not setting"
	else
	sudo sed -i  "0,/ServerName $staffurl/s//ServerName $opacurl/" $configpath
	fi
	
	# Stop the instance
	Stop
# End loop
done

# Enable and start  Koha instances
for val in "${instanceid[@]}"; do
	Start
done
# Check Apache for configuration errors
echo "If you come across any errors, check your instance Apache config at /etc/apache2/sites-enabled/$val."
sudo apachectl configtest

# Restart Apache
sudo systemctl restart apache2
