#!/bin/bash
# ------------------------------------------------------------------
# Author: Lennon Mazonde
# GitHub: @grandmaestr
# Title: koha-install
# Description: 
# 	This script installs a Koha instance(s) with a local or remote database.
# 	You can copy and paste this script onto your server and make it executable by running "chmod a+x /path/to/file_name"
# 	To run the script, simply go to "/path/to/file_name" or if it's in your home directory, run "~/file_name" in the CLI.
# 	This script is interactive, so you'll be prompted for input at various stages.
# 	You can modify or use this script however you like but I'd really appreciate it if you give me a shout out or attribution if you post it elsewhere :)

# ------------------------------------------------------------------

# Script version
VERSION=0.1.0
# Set the name of the script to variable
SCRIPT_NAME="$(basename ${0})"

# ------Help--------------------------------------------------------
Help(){
    # Display Help
    cat <<EOF
        Usage: $SCRIPT_NAME [options] 

        Options:
		a - The hostname, IP address or URL of the local or remote database. Defaults to localhost.
		c - The IP or URL address of the client (running the Koha web server). If using a VPC in AWS, Azure, or GCP enter the **Private** IP of your EC2 instance. Defaults to localhost. 
 		h - help. Print this help.
		i - InstanceId. The name of the Koha instance.
		l - options are local or remote. Defaults to local.
		p - The password of the database root user.
		o - OPAC URL. The domain or subdomain to use for the OPAC page.
		s - Staff URL. The domain or subdomain to use for the Staff page.
		u - The username of the database root user.
		v - version. Print the script version.

        Example:
        To create a Koha instance called "library" with a local database, run:
            $SCRIPT_NAME -i library -u rootuser -p dbpassword -o opac.example.com -s staff.example.com
		
		To create a Koha instance called "library" with a remote database, run:
		$SCRIPT_NAME -i library -l remote -a mydb.123456789012.us-east-1.rds.amazonaws.com -c 172.16.78.121 -u rootuser -p dbpassword -o opac.example.com -s staff.example.com		
EOF
}

# --- Options default values -------------------------------------------

# Default hostname value
hostname="localhost"

# Default client IP
clientipaddr="localhost"

# Default database location
dblocation="local"

# --- Options processing -------------------------------------------
if [ $# == 0 ] ; then
    Help
    exit 1;
fi

while getopts ":a:c:i:h:l:u:p:o:s:v" optname; do
    case "$optname" in
		a) 
			hostname=("$OPTARG")
			;;
		c) 
			clientipaddr=("$OPTARG")
			;;
		h)
			Help
			exit 0;
			;;
		i) 
			instanceid=("$OPTARG")
			;;
		l) 
			dblocation=("$OPTARG")
			;;
		o) 
			opacurl=("$OPTARG")
			;;
		p) 
			dbpass=("$OPTARG")
			;;
		s) 
			staffurl=("$OPTARG")
			;;
		u) 
			dbuser=("$OPTARG")
			;;	
		v)
			echo "Version $VERSION"
			exit 0;
			;;
		\?)
			echo "Unknown option $OPTARG"
			Help
			exit 0;
			;;
		:)
			echo "Error: you must provide an argument for option -$OPTARG"
			exit 0;
			;;
		*)
			echo "Unknown error while processing options"
			Help
			exit 0;
			;;
    esac
  done

shift $(($OPTIND - 1))

param1=$1
param2=$2

# --- Start instance------------------------------------------------
Start(){
	# Enable instance
	sudo koha-enable $val
	# Enable koha-worker
	sudo koha-worker --start $val
	# Start Zebra
	sudo koha-zebra --start $val
	# Enable Plack
	sudo koha-plack --enable $val
	sudo koha-plack --start $val
}
# --- Install remote db --------------------------------------------
InstallRemoteDB(){
	#create Koha database and user on remote server. Works on MariaDB. May need to be modified for a MySQL server.
	mysql -h ${hostname} -u ${dbuser} -p${dbpass} -e "
	CREATE DATABASE 'koha_${val}';
	CREATE USER 'koha_${val}'@'${clientipaddr}' IDENTIFIED BY '${remotekohadbpwd}';
	GRANT ALL PRIVILEGES ON koha_${val}.* to 'koha_${val}'@'${clientipaddr}'; 
	FLUSH PRIVILEGES;"
}
# --- Install remote db aurora--------------------------------------
InstallRemoteDBAurora(){
	mysql -h ${hostname} -u ${dbuser} -p${dbpass} -e "
	CREATE DATABASE 'koha_${val}';
	CREATE USER 'koha_${val}'@'${clientipaddr}' IDENTIFIED BY '${remotekohadbpwd}';
	GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER, CREATE TEMPORARY TABLES,
	CREATE VIEW, EVENT, TRIGGER, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EXECUTE ON koha_${val}.* to 'koha_${val}'@'${clientipaddr}'; FLUSH PRIVILEGES;"
}	
# --- Create koha-common.cnf --------------------------------------
CreateKohaCommon(){
	echo "
	[client]
	host     = ${hostname}
	user     = ${dbuser}
	password = ${dbpass}
	socket   = /var/run/mysqld/mysqld.sock
	[mysql_upgrade]
	host     = ${hostname}
	user     = ${dbuser}
	password = ${dbpass}
	socket   = /var/run/mysqld/mysqld.sock
	" | sudo tee /etc/mysql/koha-common.cnf >/dev/null 
}
# --- Locks -------------------------------------------------------
LOCK_FILE=/tmp/$SCRIPT_NAME.lock
if [ -f "$LOCK_FILE" ]; then
   echo "Script is already running"
   exit
fi

trap "rm -f $LOCK_FILE" EXIT
touch $LOCK_FILE

# --- Body --------------------------------------------------------

for val in "${instanceid}"; do

	# Prompt user for local or remote db install
	while true; do
		case $dblocation in
    		[lL][oO][cC][aA][lL]|[lL] )
				# Create the instance
				sudo koha-create --create-db $val
				break;;

			[rR][eE][mM][oO][tT][eE] | [rR] )
				# Create the instance
				sudo koha-create --request-db $val

				# Get and set password for the remote Koha database
				remotekohadbpwd=$(sudo xmlstarlet sel -t -v 'yazgfs/config/pass' /etc/koha/sites/$val/koha-conf.xml)

				# Install a remote Koha instance database	
				InstallRemoteDB
				
				# If using Amazon Aurora MySQL, comment the MySQL script above and uncomment the following line.
				# InstallRemoteDBAurora

				# Create koha-common.cnf
				CreateKohaCommon
				break;;

			* ) 
				echo "Invalid value for database location (-l). Option only accepts remote or local as valid inputs. Exiting."
				exit;;
		esac
	done	

	# Set path to Apache config 	
	configpath=/etc/apache2/sites-enabled/$val.conf

	# Enable your Koha instance apache config
	sudo a2ensite $val
	
	# Strip out leading http(s):// and set to variable
	staffdomain=$(echo "$staffurl" | sed "s|.*://||; s|/.*||" )

	# Strip out leading http(s):// and set to variable
	opacdomain=$(echo "$opacurl" | sed "s|.*://||; s|/.*||" )

	# Replace ServerName with Staff url 
	if [[ -z ${staffdomain} ]]; 
	then
		echo "ServerName not specified, not setting"
	else
	sudo sed  -i "/ServerName*/c\   ServerName $staffdomain" $configpath
	fi 

	# Replace ServerName with OPAC url 
	if [[ -z ${opacdomain} ]]; 
	then
		echo "ServerName not specified, not setting"
	else
	sudo sed -i  "0,/ServerName $staffdomain/s//ServerName $opacdomain/" $configpath
	fi
	
# End loop
done

# Enable and start  Koha instances
for val in "${instanceid[@]}"; do
	Start
done
# Check Apache for configuration errors
echo "If you come across any errors, check your instance Apache config at /etc/apache2/sites-enabled/$val.conf"
sudo apachectl configtest

# Restart Apache
sudo systemctl restart apache2
