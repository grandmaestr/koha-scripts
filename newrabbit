#!/bin/bash

# Default values
CN="myrabbitmq"
DAYS=3650

# Parse options
while getopts ":c:d:" opt; do
  case $opt in
    c)
      CN="$OPTARG"
      ;;
    d)
      DAYS="$OPTARG"
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

# Update and install packages
sudo apt update
sudo apt install -y rabbitmq-server openssl

# Generate self-signed certificate
CERT_DIR=/etc/rabbitmq/tls
sudo mkdir -p $CERT_DIR
cd $CERT_DIR
openssl genrsa -out ca_key.pem 2048
openssl req -x509 -new -nodes -key ca_key.pem -days $DAYS -out ca_cert.pem -subj "/CN=$CN"
openssl genrsa -out server_key.pem 2048
openssl req -new -key server_key.pem -out server.csr -subj "/CN=$CN"
openssl x509 -req -in server.csr -CA ca_cert.pem -CAkey ca_key.pem -CAcreateserial -out server_cert.pem -days $DAYS
sudo chown -R rabbitmq:rabbitmq $CERT_DIR

# Configure RabbitMQ to use TLS
sudo bash -c "cat > /etc/rabbitmq/rabbitmq.conf << EOL
listeners.ssl.default = 5671
ssl_options.cacertfile = $CERT_DIR/ca_cert.pem
ssl_options.certfile = $CERT_DIR/server_cert.pem
ssl_options.keyfile = $CERT_DIR/server_key.pem
ssl_options.verify = verify_peer
ssl_options.fail_if_no_peer_cert = true
EOL"

# Restart RabbitMQ
sudo systemctl restart rabbitmq-server

# Verify TLS configuration
echo "Testing TLS configuration:"
openssl s_client -connect localhost:5671 -CAfile $CERT_DIR/ca_cert.pem