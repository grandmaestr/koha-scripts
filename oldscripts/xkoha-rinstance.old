#!/bin/bash

# This script installs koha-common and  dependencies on a bare-bones Ubuntu server.
# I've tested this on Ubuntu Server 20.04LTS but it should work on other Debian distros. 
# You will need to configure Apache config files (/etc/apache2/sites-enabled/)
# You can copy and paste this script onto your server and make it executable by running "chmod a+x /path/to/file_name"
# To run the script, simply go to "/path/to/file_name" or if it's in your home directory, run "~/file_name" in the CLI.
# This script is interactive, so you'll be prompted for input at various stages.
# You can modify or use this script however you like but I'd really appreciate it if you give me a shout out or attribution if you post it elsewhere :)

set -e 
echo "You have the following Koha instances running on this server:"
echo $(koha-list)

printf "\n"

# Prompt the user for the name of your koha instance(s). Input something simple and easily distinguishable from other instances.
read -p "Enter the name of each  Koha instance you want to create separated by a space: " -a instance

# Prompt user for url or endpoint of remote database server
echo "Enter the url/endpoint of your remote database server:"
read hostname

# Prompt user for root user of remote database server
echo "Enter the username of your remote database root user:"
read remotedbroot

# Prompt user for password of remote database server
echo "Enter the password for the root user of your remote database server:"
read remotedbpwd

# Prompt user for root user of local database server
#echo "Enter the username of your local database root user:"
#read localdbroot

# Prompt user for password of local database server
#echo "Enter the password for the root user of your local database server:"
#read localdbpwd

# Prompt user for IP address of client server"
echo "Enter the IP address of your client server (i.e. the server runnning the  Koha web application:)"
read clientipaddr

# Store array in variables
hn=""
rdr=""
rdp=""
ldr=""
ldp=""
cip=""

# Begin instance creation loop

for instancename in "${instance[@]}"; do

hn+=" ${hostname}"
rdr+=" ${remotedbroot}"
rdp+=" ${remotedbpwd}"
ldr+=" ${localdbroot}"
ldp+=" ${localdbpwd}"
cip+=" ${clientipaddr}"

# Replace  koha-common.cnf with remotedb
#sudo sed -i "/host*/c\host     = localhost/" /etc/mysql/koha-common.cnf
#sudo sed -i "/user*/c\user     = $localdbroot/" /etc/mysql/koha-common.cnf
#sudo sed -i "password*/c\password      =$localdbpwd/" /etc/mysql/koha-common.cnf

##########################
#Create koha-common.cnf
##########################
echo "
[client]
host     = ${hostname}
user     = ${remotedbroot}
password = ${remotedbpwd}
socket   = /var/run/mysqld/mysqld.sock
[mysql_upgrade]
host     = ${hostname}
user     = ${remotedbroot}
password = ${remotedbpwd}
socket   = /var/run/mysqld/mysqld.sock
" | sudo tee /etc/mysql/koha-common.cnf >/dev/null 
##########################

# koha-plack requires the following Apache modules
sudo a2enmod headers proxy_http
sudo a2enmod cgi
sudo a2enmod deflate

################################


# Prompt user to enter their OPAC domain/subdomain
echo "Enter the your OPAC url only (Skip http:// or https://):"
read  opacurl

# Prompt user to enter their Staff URL
echo "Enter the your Staff url only (Skip http:// or https://):"
read  staffurl

# Create the instance
sudo koha-create --create-db $instancename

# Generate a password for the remote koha database
#remotekohadbpwd=$(</dev/urandom tr -dc 'A-Za-z0-9@#$%&_+=' | head -c 10)
remotekohadbpwd=$(sudo xmlstarlet sel -t -v 'yazgfs/config/pass' /etc/koha/sites/$instancename/koha-conf.xml)

#create koha database and user on remote server. Works on MariaDB. May need to be modified for a MySQL server.
#mysql -h ${hostname} -u ${remotedbroot} -p${remotedbpwd} -e "CREATE DATABASE koha_${instancename};
mysql -h ${hostname} -u ${remotedbroot} -p${remotedbpwd} -e "
CREATE USER 'koha_${instancename}'@'${clientipaddr}' IDENTIFIED BY '${remotekohadbpwd}';
GRANT ALL PRIVILEGES ON koha_${instancename}.* to 'koha_${instancename}'@'${clientipaddr}'; 
FLUSH PRIVILEGES;"

# Use this statement if using Amazon Aurora MySQL
#GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER, CREATE TEMPORARY TABLES,
#CREATE VIEW, EVENT, TRIGGER, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EXECUTE ON koha_${instancename}.* to 'koha_${instancename}'@'${clientipaddr}'; FLUSH PRIVILEGES;"

#############################
## Configure koha-conf.xml ##
#############################

koha_conf=/etc/koha/sites/$instancename/koha-conf.xml
#sudo sed -i "/<database>*/c\<database>koha_$instancename</database>" $koha_conf
#sudo sed -i "/<hostname>*/c\<hostname>$hostname</hostname>" $koha_conf
#sudo sed -i "/<user>*/c\<user>koha_$instancename</user>" $koha_conf
sudo sed -i "/<pass>*/c\<pass>$remotekohadbpwd</pass>" $koha_conf
#############################
# Populate the database 
#############################

#sudo  koha-create --populate-db $instancename
sudo koha-enable $instancename

#echo "You will need to configure your instance for name-based or ip installation. See /etc/apache2/sites-available/$instancename for more." 
#sleep 2

# Enable your Koha instance
sudo a2ensite $instancename

# Check Apache for configuration errors
echo "If you come across any errors, go to /etc/apache2/sites-enabled/$instancename."
sudo apachectl configtest

# Restart Apache
sudo systemctl restart apache2

# Enable instance

sudo koha-worker --restart $instancename

# Start Zebra
sudo koha-zebra --restart $instancename

# Enable Plack
sudo koha-plack --enable $instancename
sudo koha-plack --restart $instancename



# Dump and restore local db to remotedb
# mysqldump -u root -p${localdbpwd} koha_$instancename > koha_$instancename.sql
#  mysql -h ${hostname} -u ${remotedbroot} -p${remotedbpwd} koha_$instancename < koha_$instancename.sql

# Use sed to rewrite sample database and import to remotedb
#sudo cp koha_sampledb.sql koha_$instancename.sql
#sudo sed -i "s/koha_sampledb/${instancename}/g" koha_$instancename.sql
#mysql -h ${hostname} -u ${remotedbroot} -p${remotedbpwd} koha_$instancename < koha_$instancename.sql

#  Drop local instance db
# mysql -u root -p${localdbpwd} -e "DROP DATABASE koha_${instancename};
# DROP USER 'koha_${instancename}'@'localhost';
# FLUSH PRIVILEGES;"



# Replace ServerName with  OPAC url above
sudo sed -i "/ServerName $instancename.myDNSname.org/c\   ServerName $opacurl/" /etc/apache2/sites-enabled/$instancename.conf

# Replace ServerName with  OPAC url above
sudo sed -i "/ServerName $instancename-intra.myDNSname.org/c\   ServerName $staffurl/" /etc/apache2/sites-enabled/$instancename.conf

done
# Restart Apache
sudo systemctl restart apache2

#####################################
# Replace  koha-common.cnf with remotedb to enable updates
#sudo sed -i "/host*/c\host     = $hostname" /etc/mysql/koha-common.cnf
#sudo sed -i "/user*/c\user     = $remotedbroot" /etc/mysql/koha-common.cnf
#sudo sed -i "password*/c\password      =$remotedbpwd" /etc/mysql/koha-common.cnf
# Restart koha-common to reload config
#sudo systemctl restart koha-common

