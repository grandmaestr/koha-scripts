#!/bin/bash

usage() {
  echo "Usage: $0 [-b <bucket-name>] [-d <days>] [-h]"
  echo "  -b <bucket-name>  Specify the S3 bucket name (default: use \$S3_BUCKET environment variable)"
  echo "  -d <days>         Specify the number of days for the threshold (default: 30)"
  echo "  -h                Display this help message"
  exit 1
}

# Default values
bucket_name="$S3_BUCKET"
threshold_days=30

while getopts ":b:d:h" opt; do
  case "$opt" in
    b)
      bucket_name="$OPTARG"
      ;;
    d)
      threshold_days="$OPTARG"
      ;;
    h)
      usage
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      usage
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      usage
      ;;
  esac
done

# Calculate the timestamp for the threshold
threshold_timestamp=$(date -d "$threshold_days days ago" +%s)

# List all objects in the S3 bucket and filter those older than the threshold
aws s3 ls "s3://${bucket_name}" --recursive --human-readable --summarize | \
grep -E '^[0-9]{4}-[0-9]{2}-[0-9]{2}' | \
while read -r line; do
    timestamp=$(echo "$line" | awk '{print $1, $2}')
    file=$(echo "$line" | awk '{$1=$2=""; print $0}')
    file_timestamp=$(date -d "$timestamp" +%s)
    if [ "$file_timestamp" -lt "$threshold_timestamp" ]; then
        echo "File: $file, Timestamp: $timestamp"
    fi
done
