#!/bin/bash

set -euox pipefail

# Include helper functions
if [ -f "/usr/share/koha/bin/koha-functions.sh" ]; then
    . "/usr/share/koha/bin/koha-functions.sh"
else
    echo "Error: /usr/share/koha/bin/koha-functions.sh not present." >&2
    exit 1
fi

# Make sure the files we create are not accessible by anyone else.
umask 0077

# Default values
instances=()
s3_url=""

usage() {
    local scriptname=$(basename "$0")

    cat <<EOF
$scriptname

This script dumps your Koha instance data for backup and uploads it to the specified S3 bucket.

Usage:
$scriptname [-i instance1 [instance2...]] [-s s3://bucket-name]
$scriptname -h|--help

Options:
    -i                    One or more Koha instance names to dump (separated by spaces)
                          Example: $scriptname -i instance1 instance2
                          
    -s                    URL of the S3 bucket to copy the backups
                          Example: $scriptname -i instance1 -s s3://bucket-name
                          
    --help|-h             Display this help message
                          Example: $scriptname -h
EOF
}

dump_instance() {
    local name="$1"

    kohaconfig="/etc/koha/sites/$name/koha-conf.xml"
    date=$(date +"%m-%d-%Y-%Hh%M")

    echo "Dumping Koha site $name:"

    # Dump database.
    mysqlhost="$(sudo xmlstarlet sel -t -v 'yazgfs/config/hostname' "$kohaconfig" )"
    mysqldb="$( sudo xmlstarlet sel -t -v 'yazgfs/config/database' "$kohaconfig" )"
    mysqluser="$( sudo xmlstarlet sel -t -v 'yazgfs/config/user' "$kohaconfig" )"
    mysqlpass="$(sudo  xmlstarlet sel -t -v 'yazgfs/config/pass' "$kohaconfig" )"
    backupdir=/tmp
    [ -z "$backupdir" ] && backupdir="/var/spool/koha/$name"
    dbdump="$backupdir/$name-$date.sql.gz"

    mysqldump --databases --no-tablespaces --host="$mysqlhost" --single-transaction --user="$mysqluser" --password="$mysqlpass" "$mysqldb" | gzip > "$dbdump"

    if [ -n "$s3_url" ]; then
        echo "* copying backups to S3 bucket: $s3_url"
        aws s3 cp "$dbdump" "$s3_url/$name/$name-$date.sql.gz"
    else
        echo "Error: S3 URL is empty. Please provide a valid S3 URL." >&2
        usage
        exit 1
    fi

    echo "Done."
}

if [ $# -eq 0 ]; then
    usage
    exit 1
fi

while [ $# -gt 0 ]; do
    case "$1" in
        -i)
            shift
            while [ $# -gt 0 ] && [[ "$1" != "" ]] && ! [[ "$1" =~ ^- ]]; do
                instances+=("$1")
                shift
            done ;;
        -s)
            shift
            s3_url="${1:-}"
            shift ;;
        -h|--help)
            usage ; exit 0 ;;
        *)
            instances+=("$1")
            shift ;;
    esac
done

if [ "${#instances[@]}" -eq 0 ]; then
echo "Error: you must provide at least one instance name" >&2
usage
exit 1
fi

for name in "${instances[@]}"; do
if ! is_instance "$name"; then
echo "Error: Invalid instance name $name" >&2
exit 1
fi
dump_instance "$name"
done

exit 0
