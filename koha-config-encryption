#!/bin/bash
# ------------------------------------------------------------------
# Author: Lennon Mazonde
# GitHub: @grandmaestr
# Title: koha-config-encryption
# Description: 
# 	This script configures a missing encryption_key element in koha-conf.xml
# 	You can copy and paste this script onto your server and make it executable by running "chmod a+x /path/to/file_name"
# 	To run the script, simply go to "/path/to/file_name" or if it's in your home directory, run "file_name"  in the CLI.
# 	This script is interactive, so you'll be prompted for input at various stages.
# 	You can modify or use this script however you like but I'd really appreciate it if you give me a shout out or attribution if you post it elsewhere :)

# ------------------------------------------------------------------

# Script version
VERSION=0.1.0
# Set the name of the script to variable
SCRIPT_NAME="$(basename ${0})"

# ------Help--------------------------------------------------------
Help(){
    # Display Help
    cat <<EOF
        Usage: $SCRIPT_NAME -ihv args

        Options:
        i - instanceid. The name of the koha instance. One instance id per option.
        h - help. Print this help.
        v - version. Print the script version.

        Example:
        To define a new staff or OPAC url for a single instance called "library", run:
            $SCRIPT_NAME -i library
        For multiple instances, run
                $SCRIPT_NAME -i library1 -i library2 ...
EOF
}
# --- Options processing -------------------------------------------
if [ $# == 0 ] ; then
    Help
    exit 1;
fi

while getopts ":i:vh" optname; do
    case "$optname" in
      v)
        echo "Version $VERSION"
        exit 0;
        ;;
      i)  
        instanceid+=("$OPTARG")
        ;;
      h)
        Help
        exit 0;
        ;;
      \?)
        echo "Unknown option $OPTARG"
        Help
        exit 0;
        ;;
      :)
        echo "Error: you must provide at least one instance name for option -$OPTARG"
        exit 0;
        ;;
      *)
        echo "Unknown error while processing options"
        Help
        exit 0;
        ;;
    esac
  done

shift $(($OPTIND - 1))

param1=$1
param2=$2

# --- Backup Original Config -------------------------------------
Backup(){
	# copy koha-conf.xml to tmp in case you need to restore
	config_backup=/tmp/$val.$(date +%d-%m-%Y-%Hh%Mm%Ss).koha-conf.xml
	sudo cp $configpath $config_backup
}

# --- Restore Original Config -------------------------------------
Restore(){
	# restore original config from backup
	sudo cp $config_backup $configpath
}

# --- Locks -------------------------------------------------------
LOCK_FILE=/tmp/$SUBJECT.lock
if [ -f "$LOCK_FILE" ]; then
   echo "Script is already running"
   exit
fi

trap "rm -f $LOCK_FILE" EXIT
touch $LOCK_FILE

# --- Body --------------------------------------------------------

# This script configures a missing encryption_key element in koha-conf.xml

for val in "${instanceid[@]}"; do
	# set path to koha-conf.xml
	configpath=/etc/koha/sites/$val/koha-conf.xml
	
	# check if encryption key element exists
	if [ $(xmlstarlet sel -t -v "count(yazgfs/config/encryption_key)" $configpath) -eq "0" ];
	then

		# Backup the original config file
		Backup

		# generate encryption key and set to variable
		keyvalue=$(pwgen 32 -1)	
		
		# if not existing, insert element
		xmlstarlet ed -L -P -s "/yazgfs/config" -t elem -n encryption_key -v $keyvalue $configpath 	

		# Prompt to restore original config
		printf "The koha-conf.xml file for $val has been updated."
		while true; do
			read -p "Restore original file? Answering yes will revert to original config file: " response 
			case $response in
				[yY][eE][sS]|[yY] )
					Restore;
					printf "The original config has been restored. \n";
					break;;
				
				[nN][oO]|[nN] ) 
					printf "Changes kept";
					break;;

				[qQ][uU][iI][tT] | [qQ] )
					exit;;

				* ) echo Invalid response.Try again;;
			esac
		done
	else
		printf 'Encryption_key already set'
	fi
done


echo "#################################################################"
echo "If you encountered problems run koha-config-encryption-restore immediately after execution of koha-config-encryption"
